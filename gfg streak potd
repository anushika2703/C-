Check if frequencies can be equal:
Given a string s which contains only lower alphabetic characters, check if it is possible to remove at most one character from this string in such a way that frequency of each distinct character becomes same in the string. Return true if it is possible to do else return false.
Note: The driver code print 1 if the value returned is true, otherwise 0.
C++ code : (without driver code)=
class Solution{
public:
bool sameFreq(string s)
{
    if(s.length()==1)
    {
        return true;
    }
    int arr[26]={0};
    for(int i=0;i<s.length();i++)
    {
        arr[s[i]-'a']++;
    }
    int count=0;
    int maxi=0;
    int mini=s.length();
    for(int i=0;i<26;i++)
    {
        if(arr[i]!=0)
        {
            maxi=max(maxi,arr[i]);
            mini=min(mini,arr[i]);
        }
    }
    for(int i=0;i<26;i++)
    {
        if(arr[i]!=0 and arr[i]==maxi)
        {
            count++;
        }
    }
    if(maxi==mini)
    {
        return true;
    }
    if(mini!=1)
    {
        if(count>1)
        {
            return false;
        }
    }
    if(maxi-mini==1)
    {
        return true;
    }
    return false;
}
};
