Given a binary tree with n nodes. Find the zig-zag level order traversal of the binary tree.
cpp without driver's code:
class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    	// Code here
    	if(!root) return {};
    	queue<Node *> q;
    	q.push(root);
    	int level = -1;
    	vector<int> answer;
    	while(!q.empty()) {
    	    level++;
    	    int n = (int)q.size();
    	    vector<int> currLevel;
    	    for(int i = 0 ; i < n ; i++) {
    	        Node* node = q.front();
    	        q.pop();
    	        if(node -> left) q.push(node -> left);
    	        if(node -> right) q.push(node -> right);
    	        currLevel.push_back(node -> data);
    	    }
    	    if(level & 1) {
    	        reverse(currLevel.begin(), currLevel.end());
    	    }
    	    for(int i : currLevel) answer.push_back(i);
    	}
    	return answer;
    }
};
